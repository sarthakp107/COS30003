@page "/login"
@inject UserService userService
@inject UserSessionService sessionService
@inject NavigationManager navigationManager

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="card shadow-sm p-5" style="max-width: 400px; width: 100%;">
        <h2 class="mb-4 text-center text-primary">Welcome Back!</h2>

        <EditForm Model="@loginModel" OnValidSubmit="@HandleLoginAttempt">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <InputText id="email" type="email" class="form-control" @bind-Value="loginModel.Email" placeholder="you@example.com" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="mb-4">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Enter your password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger" role="alert">@errorMessage</div>
            }

            <button type="submit" class="btn btn-primary w-100">Log In</button>
        </EditForm>

        <div class="text-center mt-3">
            <a href="/register" class="text-decoration-none">Don't have an account? Register</a>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string? errorMessage;

    private void HandleLoginAttempt()
    {
        errorMessage = null; // Clear previous errors
        var user = userService.Login(loginModel.Email, loginModel.Password);

        if (user != null)
        {
            sessionService.SetCurrentUser(user);
            navigationManager.NavigateTo("/"); // Redirect to home page
        }
        else
        {
            errorMessage = "Invalid email or password. Please try again.";
        }
    }

    public class LoginModel
    {
        [System.ComponentModel.DataAnnotations.Required(ErrorMessage = "Email is required.")]
        [System.ComponentModel.DataAnnotations.EmailAddress(ErrorMessage = "Invalid email format.")]
        public string Email { get; set; } = "";

        [System.ComponentModel.DataAnnotations.Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; } = "";
    }
}
